//–∏–º–ø–æ—Ä—Ç –≤–Ω–µ—à–Ω–∏—Ö –ø–∞–∫–µ—Ç–æ–≤
import React, { FC, useEffect } from 'react'

//–∏–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import styles from './CategoryChoosen.module.scss'

//–∏–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤

//–∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
import { useActions } from '../../../../hooks';

//–∏–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

interface ICategoryChoosePop {
  setIsPopOpen: React.Dispatch<React.SetStateAction<boolean>>
  setStep: any
}

export const CategoryChoosePop: FC<ICategoryChoosePop> = ( { setIsPopOpen, setStep } ) => {
  const { changeCategory } = useActions();

  return (
    <>
      <div className={styles["pop-text"]}>
        <p>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –Ω–∞–∑–∞–¥?</p>
        <span style={{'fontSize':'50px'}}>ü§î</span>
        <span className={styles["pop-span"]}>–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –æ—Ç–∫–∞—Ç–∏—Ç—Å—è.</span>
      </div>
      <div className={styles.buttons}>
        <button 
          className={styles.back} 
          style={{'borderColor': 'red', 'color': 'red'}} 
          onClick={() => {setStep('category-choose');changeCategory([])}}>–î–∞
        </button>
        <button 
          className={styles.back} 
          onClick={() => setIsPopOpen(false)}>–ù–µ—Ç
        </button>
      </div>
    </>
  )
}